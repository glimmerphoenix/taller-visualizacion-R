[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visualización de datos con R",
    "section": "",
    "text": "Prefacio\nEn este taller exploramos los fundamentos prácticos para la creación de gráficos para visualización de datos utilizando el lenguaje R. La representación gráfica de la información es un apartado fundamental en todo proyecto de Ciencia de Datos, puesto que permite descubrir patrones y características no evidentes, identificar valores atípicos, así como resumir la información de forma más evidente y directa para el espectador. Aunque este apartado es en sí mismo muy amplio, en este taller vamos a centrarnos en los típos de gráficos básicos, así como en visualizaciones que por su especial relevancia para aplicaciones en Ciencias Agrarias y Ambientales puedan resultar interesantes para los/as participantes\nEste es un taller práctico que presenta ejemplos reales y comandos para crear paso a paso visualizaciones de datos efectivas con R. Además, junto a la explicación de los conceptos clave para entender este proceso también se ofrecen recomendaciones sobre buenas prácticas para crear gáficos más informativos y claros, evitando errores comunes y potenciando su capacidad de condensar gran cantidad de información sin que conlleve una excesiva complejidad para su correcta interpretación.\nLos apuntes para este taller práctico se han realizado con Quarto, una herramienta para creación de documentación científica y programación literaria compatible con R y otros lenguajes de programación científica.",
    "crumbs": [
      "Prefacio"
    ]
  },
  {
    "objectID": "index.html#requisitos-previos",
    "href": "index.html#requisitos-previos",
    "title": "Visualización de datos con R",
    "section": "Requisitos previos",
    "text": "Requisitos previos\nPara poder realizar los ejemplos inlcuidos en este taller necesitas tener instalado R y una IDE de desarrollo para este lenguaje. Se recomienda instalar RStudio o MS Visual Code como entorno de programación.\n\nInstalación de R.\nInstalación de RStudio.\n\nAdicionalmente, es necesario instalar una serie de paquetes R antes de ejecutar los ejemplos, para que todas las dependencias estén disponibles en nuestro sistema. Consulta el Apéndice B.1 Requisitos previos para comprobar el listado de paquetes R necesarios.",
    "crumbs": [
      "Prefacio"
    ]
  },
  {
    "objectID": "01-elements.html",
    "href": "01-elements.html",
    "title": "1  Elementos de la visualización de datos",
    "section": "",
    "text": "1.1 Importancia de la visualización de datos\nNunca se podrá insistir lo suficiente en la extrema importancia que la visualización de datos tiene dentro del proceso de preparación y análisis de datos. Un ejemplo sencillo pero muy convincente es el llamado Cuarteto de Anscombe, introducido por dicho autor hace ya más de 50 años (Anscombe, 1973). Se trata de 4 datasets que tienen identicas propiedas estadística de resumen básico de datos: media, varianza, correlación y recta de regresión simple ajustada por el método de mínimos cuadrados. Sin embargo, una inspección gráfica revela rápidamente estructuras claramente diferentes en cada conjunto de datos, tal y como podemos ver en la Figura 1.1.\nEn consecuencia, queda demostrado que es imprescindible representar gráficamente nuestros datos si queremos evitar sorpresas durante el proceso de preparación y análisis.",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Elementos de la visualización de datos</span>"
    ]
  },
  {
    "objectID": "01-elements.html#importancia-de-la-visualización-de-datos",
    "href": "01-elements.html#importancia-de-la-visualización-de-datos",
    "title": "1  Elementos de la visualización de datos",
    "section": "",
    "text": "Figura 1.1: Valores, estadísticos resumen y representación gŕafica de los cuatro datasets del llamado Cuarteto de Anscombe. La representación gráfica muestra las rectas de regresión simple que se ajustan a cada dataset, todas ellas idénticas entre sí. Fuente: (Munzner, 2015).",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Elementos de la visualización de datos</span>"
    ]
  },
  {
    "objectID": "01-elements.html#estrategia-de-diseño-y-selección-de-gráficos",
    "href": "01-elements.html#estrategia-de-diseño-y-selección-de-gráficos",
    "title": "1  Elementos de la visualización de datos",
    "section": "1.2 Estrategia de diseño y selección de gráficos",
    "text": "1.2 Estrategia de diseño y selección de gráficos\nA poco que repasemos algunos sitios web, libros de referencia, artículos y tutoriales sobre visualización de datos, rápidamente nos daremos cuenta de la ingente cantidad de material y el vasto catálogo de opciones, elementos de diseño y oportunidades de personalización que se abren ante nosotros. En esta situación, resulta complicado decidir qué diseño o qué combinación de elementos son los más adecuados para nuestro caso particular. Para guiarnos en esta tarea, Munzner (2015) propone un método sencillo que se basa en tres preguntas clave:\n\nWhat?: Identificar qué datos queremos representar, cuál es su naturaleza o modalidad (cuantitativos, cualitativos, ordenados/ranking, grafo, serie temporal, datos espaciales, etc.). Dependiendo de la modalidad de los datos, su tamaño y otras propiedades relevantes podremos considerar o descartar unos elementos o diseños de visualización u otros.\nWhy?: Reflexionar sobre el propósito de nuestro gráfico, qué queremos mostrar o resaltar y cómo queremos dirigir la atención del espectador hacia los aspectos más importantes del mismo.\nHow?: Una vez que hemos filtrado los posibles elementos y diseños compatibles con nuestros datos, pensamos en cuáles de ellos ofrecen la combinación más adecuada para conseguir el propósito inicial que hemos establecido.\n\nSi seguimos este método de toma de decisiones conseguiremos que nuestros gráficos sean más informativos, más sencillos de interpretar y capten mejor la atención de la audiencia.",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Elementos de la visualización de datos</span>"
    ]
  },
  {
    "objectID": "01-elements.html#tipos-de-datos-y-datasets",
    "href": "01-elements.html#tipos-de-datos-y-datasets",
    "title": "1  Elementos de la visualización de datos",
    "section": "1.3 Tipos de datos y datasets",
    "text": "1.3 Tipos de datos y datasets\nLos datos que son objetos de análisis están caracterizados por un cierto tipo (a veces también nos referimos a su modalidad) y una semántica. El tipo nos indica su estructura o su interpretación matemática, mientras que la semántica de los datos es su significado en el mundo real.\n\n\n\n\n\n\nTipos de datos y formato de representación\n\n\n\nEl tipo de los datos está directamente relacionado con el formato de representación que utilizamos para almacenar su valor. Por ejemplo, datos de tipo numérico se pueden almacenar como números enteros, en coma flotante, números de doble precisión, etc. Los datos categóricos tienen valores que corresponden a etiquetas o identificadores de cada categoría o grupo.\nDebemos tener cuidado con interpretaciones equívocas del tipo y formato de los datos al representarlos gráficamente. Por ejemplo, si una variable representa el código postal, sus valores serán números pero su tipo de datos debería ser categórico (factor, en R), no una cantidad (no es una variable cuantitativa).\n\n\nLa Figura 1.2 muestra cinco tipos de datos básicos:\n\n\n\n\n\n\nFigura 1.2: Los cinco tipos básicos de datos que consideramos en este taller. Fuente: (Munzner, 2015.)\n\n\n\n\nUn ítem es una entidad individual discreta, una unidad de nuestro análisis, como por ejemplo una fila en una tabla (con tidy data) o un nodo de un grafo.\nUn atributo es una propiedad o característica específica que se puede medir, observar o registrar. También se usan los nombres variable, dimensión, feature o campo.\nUn enlace (link en inglés) es una relación o conexión explícita entre dos ítems, típicamente cuando estamos representando un grafo.\nUna malla (grid) representa una estrategia para muestrear datos teniendo en cuenta las relaciones geométricas y topológicas entre las celdas.\nFinalmente, la posición o ubicación en datos espaciales nos proporciona coordenadas en un espacio de representación 2D o 3D en el espacio como, por ejemplo, un par (latitud, longitud).\n\nDebemos remarcar que, en ocasiones, algunos atributos tienen significados especiales, como es el caso ya mencionado de la ubicación. Por ejemplo, en datos que representan series temporales uno de los atributos de nuestros ítems será una marca de tiempo (fecha, hora o ambas) que caracteriza a dicho ìtem. A la hora de representar estos datos tenemos que tener en cuenta la dependencia estricta que tienen respecto a ese atributo. De lo contrario, estaríamos rompiendo la estructura de los datos y degradando su calidad.\n\n\n\n\n\n\nCorrelación y datos con dependencias\n\n\n\nSi un dataset contiene valores tomados en diferentes instantes de tiempo, es necesario tener en cuenta ese atributo al representarlos gráficamente y analizarlos. Los valores de datos tomados en instantes de tiempo cercanos entre sí tienden a ser más parecidos entre ellos (alta correlación) que los datos tomados en instantes de tiempo más alejados (baja correlación).\nEn general, podemos hablar del concepto de datos con dependencias estrictas para reflejar el hecho de que uno o más atributos (marca de tiempo, ubicación o ambos simultáneamente) determinan fuertemente la estructura interna de ese dataset y la organizació de sus valores.\n\n\nLa forma en la que organizamos los datos para su almacenamiento y procesamiento determina el tipo de dataset con el que vamos a trabajar. La Figura 1.3 representa los cuatro tipos básicos de datasets, junto con algunos tipos adicionales.\n\n\n\n\n\n\nFigura 1.3: Los cuatro tipos básicos de datasets (tablas, grafos y árboles, cuerpos (o campos) y geometrías) junto con otros tipos adicionales (clusters, conjuntos y listas). Fuente: (Munzner, 2015.)\n\n\n\n\nTablas: Los datos se pueden representar como filas y columnas de una tabla, donde cada fila representa un ítem y cada columna representa un atributo o feature (concepto tidy data (Wickham, 2014)). Estas tablas se suelen representar en memoria mediante un objeto Data Frame.\nUna red o grafo es un dataset orientado a consignar y representar las relaciones entre dos o más ítems. En este caso el enlace representa una relación entre dos ítems. A veces, los enlaces pueden tener también atributos que los describan (por ejemplo, un grado de importancia, tipo de relación, etc.). Los árboles son grafos jerárquicos que no tienen ciclos y representan relaciones multinivel entre los ítems.\nUn cuerpo (en inglés field, a veces traducido como campo) en un dataset que contiene valores de atributos asociados con celdas o regiones. Cada celda contiene valores medidos o calculados a partir de un dominio continuo. Un ejemplo sería la división de una imagen satelital mediante una malla de celdas hexagonales, para después medir y asignar un valor promedio del Índice de Vegetación de Diferencia Normalizada (NDVI) o del Índice de Humedad de diferencia normalizada (NDWI) en esa celda. La malla que empleamos para subdividir el dominio continuo en celdas discretas puede ser también rectilínea o seguir otro tipo de geometría. También puede ser uniforme (división a intervalos regulares) o no uniforme.\nUna geometría es un dataset específico que contiene información para respresentar formas de ítems en ubicaciones espaciales específicas. Es un tipo de dataset intrínsecamente relacionado con las representaciones de datos espaciales, como por ejemplo los polígonos que delimitan las fronteras de municipios, provincias o países en un mapa político.\n\nOtros tipos específicos de datasets incluyen los conjuntos (sets), que son grupos no ordenados de ítems (usualmente sin posibilidad de que se repitan); las listas (conjuntos ordenados de ítems); y los clusters, que agrupan los elementos de acuerdo con el grado de similaridad entre ellos.\n\n1.3.1 Gráficos dinámicos e interactivos\nEn este taller, la mayoría de gráficos que vamos a construir son estáticos, es decir, la representación visual de los datos permanece fija e inalterada. Sin embargo, en ciertas situaciones puede ser beneficioso construir representaciones dinámicas de nuestros datos, como representa la Figura 1.4. Un ejemplo suelen ser los gráficos de evolución en los que representamos más de un atributo simultáneamente, como los que podemos representar con el paquete gganimate en R.\n\n\n\n\n\n\nFigura 1.4: Dos tipos de disponibilidad de resultados gráficos. Los gráficos dinámicos, a su vez, pueden admitir cierto grado de interactividad o no. Fuente: (Munzner, 2015).\n\n\n\nA su vez, los gráficos dinámicos pueden ser también interactivos, es decir, además de añadir dinamismo pueden permitir al espectador interactuar con el gráfico para explorar aspectos concretos de los datos. Un ejemplo muy claro de este tipo de gráficos interactivos son los paneles de seguimiento o dashboards que podemos construir con la herramienta Shiny, tal y como se muestra en la Figura 1.5.\n\n\n\n\n\n\nFigura 1.5: Ejemplo de gráfico interactivo para selección de datos en un diagrama de dispersión",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Elementos de la visualización de datos</span>"
    ]
  },
  {
    "objectID": "01-elements.html#tipos-de-atributos",
    "href": "01-elements.html#tipos-de-atributos",
    "title": "1  Elementos de la visualización de datos",
    "section": "1.4 Tipos de atributos",
    "text": "1.4 Tipos de atributos\nLa Figura 1.6 muestra diferentes tipos de atributos que caracterizan los ìtems de un dataset.\n\nUn atributo categórico consta de un conjunto de etiquetas de identificación, que no tienen ningún tipo de ordenación interna. Un ejemplo serían nombres de países o regiones, colores, etc.\nUn atributo ordenado contiene valores que están ordenados entre sí, es decir, se pueden aplicar operaciones de comparación lógica entre dichos valores. Un ejemplo sería los tamaños de una camiseta (S, M, L, XL, etc.), los resultados de valoración (, , , etc. ). Un caso particular son las variables cuantitativas, en las que los valores se referencian respecto a un mismo origen.\nSegún la dirección de su ordenación, podemos encontrar atributos secuenciales, divergentes o cíclicos.\n\n\n\n\n\n\n\nFigura 1.6: Tipos de atributos que describen los ítems de un dataset. Fuente: (Munzner, 2015).",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Elementos de la visualización de datos</span>"
    ]
  },
  {
    "objectID": "01-elements.html#marcas-y-canales",
    "href": "01-elements.html#marcas-y-canales",
    "title": "1  Elementos de la visualización de datos",
    "section": "1.5 Marcas y canales",
    "text": "1.5 Marcas y canales\nUnos de los principios fundamentales para la construcción de gráficos efectivos para visualización de datos es ser conscientes de la elección de las marcas o símbolos que empleamos para representar la información así como los canales de percepción de los espectadores que pretendemos emplear. La Figura 1.7 muestra un resumen de las principales marcas y canales como elementos constructivos que podemos emplear para diseñar nuestros gráficos (Munzner, 2015).\n\n\n\n\n\n\nFigura 1.7: Catálogo de algunas marcas y canales que podemos utilizar en nuestras visualizaciones para representar información. Fuente: (Munzner, 2015).\n\n\n\nDebemos prestar atención a la clasificación que muestra la Figura 1.7, puesto que no todas las marcas ni todos los canales tienen la misma efectividad al representar la información para que el espectador la reciba e interprete. Por ejemplo, a pesar de que se usa con mucha frecuencia el canal de luminancia o saturación de la paleta de colores es mucho menos efectivo para codificar la información y que el espectador la inteprete que la longitud o el área 2D. A su vez, la representación de datos en volúmenes 3D debe ser un recurso que no se utilice a la ligera y su empleo debe estar muy bien justificado puesto que, en general, es un canal de información mucho más difícil de intepretar (sobre todo para ciertas tareas, como comparaciones).",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Elementos de la visualización de datos</span>"
    ]
  },
  {
    "objectID": "01-elements.html#paletas-de-colores",
    "href": "01-elements.html#paletas-de-colores",
    "title": "1  Elementos de la visualización de datos",
    "section": "1.6 Paletas de colores",
    "text": "1.6 Paletas de colores\nExisten multitud paletas de colores que podemos usar en R para la representación gráfica de nuestros datos. Tanta variedad puede, ciertamente, abrumar al usuario poco experimentado, que no sabe bien qué opción es la mejor para determinada aplicación. Por si eso no fuera suficiente, es posible personalizar cualquier paleta o construir nuestra propia paleta de colores para una visualización.\nSin embargo, se pueden encontrar algunas recomendaciones interesantes que nos pueden servir de guía:\n\nEl principal consejo es no escoger a mano colores individuales que no estén agrupados ya en una paleta. La construcción de las paletas de colores que ofrecen varios paquetes de R e incluso R base ya ha tenido en cuenta, en su diseño, factores sobre teoría de color, interpretación y otros usos específicos.\nDedica un poco de tiempo a revisar la documentación de alguno de estos paquetes para buscar paletas que estén diseñadas para tu caso particular. Por ejemplo, si quieres representar información de la orografía de un terreno (curvas de nivel), temperatura de ciertas áreas o valores que describen campos en un mapa geopolítico, es casi seguro que uno de estos paquetes ofrece soluciones adaptadas a cada caso particular.\nEl número máximo de colores que incluye cada paleta oscila entre 7 y 10. En muy raras ocasiones se pueden encontrar paletas de más de 10 colores y por una buena razón. Un excesivo número de colores generará confusión en nuestro gráfico, ya que nuestro cerebro tendrá más problemas para identificar cada color individual.\nRecuerda pensar en el propósito del gráfico que quieres construir y elige una paleta que se adecúe a ese objetivo. Hay paletas con gradaciones de saturación o luminancia del mismo color para indicar subidas o bajadas graduales de atributos con valores cuatitativos, mientras que otras paletas combinan colores que se distingan perfectamente los unos de los otros para identificar cada caso (por ejemplo, el gráficos con múltiples líneas que representan la evolución de varias variables). La Figura 1.8 muestra un ejemplo de los dos tipos de paletas mencionados para el caso del paquete RColorBrewer.\n\n\nlibrary(RColorBrewer)\ndisplay.brewer.all()\n\n\n\n\n\n\n\nFigura 1.8: Catálogo de paletas de colores incluidas en el paquete RColorBrewer.\n\n\n\n\n\nAlgunos de los paquetes R más conocidos que ofrecen paletas de colores para representación gráfica de datos son:\n\nEl paquete viridis y su versión reducida viridisLite (enlazado por defecto en el conocido paquete ggplot2) presenta paletas de colores diseñadas para mejorar su legibilidad en espectadores con formas habituales de ceguera a algún color u otros tipos de deficiencias visuales. Los mapas de color que ofrecen tienen una escala de percepción uniforme y todos ellos son directamente convertibles a formato B/N para impresión en escala de grises.\nEl paquete colorspace proporciona paletas específicamente diseñadas dependiendo del tipo de atributo que queremos representar, incluyendo valores categóricos, secuenciales, divergentes, etc. La Figura 1.9 muestra un ejemplo de paletas diseñadas en base a los valores de tonalidad, crominancia y luminancia para varios tipos de atributos.\n\n\nlibrary(colorspace)\nhcl_palettes(plot = TRUE)\n\n\n\n\n\n\n\nFigura 1.9: Paletas incluidas en el paquete colorspace para diferentes tipos de atributos.\n\n\n\n\n\n\nOtro paquete muy conocido es RColorBrewer, muy popular en cartografía puesto que ofrece una herramienta interactiva de selección de paletas en función de los objetivos de nuestro mapa.\n\n\n\n\n\nAnscombe, F. J. (1973). Graphs in Statistical Analysis. American Statistician, 27(1), 17-21.\n\n\nMunzner, T. (2015). Visualization Analysis and Design. A K Peters. http://www.cs.ubc.ca/\\%7Etmm/vadbook/\n\n\nWickham, H. (2014). Tidy Data. Journal of Statistical Software, Articles, 59(10), 1-23. https://doi.org/10.18637/jss.v059.i10",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Elementos de la visualización de datos</span>"
    ]
  },
  {
    "objectID": "02-principles.html",
    "href": "02-principles.html",
    "title": "2  Principios de visualización de datos",
    "section": "",
    "text": "2.1 Reglas básicas\nComencemos por algunas reglas básicas de creación de gráficos (Munzner, 2015, Capítulo 6).\nUn caso muy diferente y que no tratamos en este taller es la visualización de datos 3D inmersiva, es decir, utilizando dispositivos como gafas de realidad virtual y otros medios que permitan al espectador interpretar la visualización 3D en un espacio de representación también en 3D. Esta es un área de investigación muy activa en la actualidad y con resultados muy prometedores.",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Principios de visualización de datos</span>"
    ]
  },
  {
    "objectID": "02-principles.html#reglas-básicas",
    "href": "02-principles.html#reglas-básicas",
    "title": "2  Principios de visualización de datos",
    "section": "",
    "text": "Se debe evitar un uso no justificado de elementos y gráficos en 3D. En este sentido se debería puntualizar que nos referimos a una representanción 3D en una superficie o área de visualización bidimensional, como puede ser un papel, un póster o una pantalla. Esta recomendación se basa en la dificultad que entrañan los artefactos visuales empleados para dar una sensación 3D en gráficos representados en un área 2D, que pueden engañar a nuestra percepción y dificultad comparaciones y apreciación de elementos relevantes en el gráfico.\n\n\n\nTambién se debe evitar el uso no justificado de una representación gráfica en 2D si, por ejemplo, es suficiente con una tabla o una lista de valores para representar los resultados.\nSe deben favorecer elementos y canales que impongan poca carga cognitiva en el espectador para interpretar el gráfico. Por ejemplo, si tenemos un gráfico que permite girar la figura en varias direcciones, nuestra mente tiene que recordar qué vio en las perspectivas anteriores para interpretar el gráfico por completo. Por contra, si presentamos una visualización estática con planta, alzado y perfil se pueden extraer conclusiones más fácilmente, al acceder a todas las perspectivas de forma simultánea.\nEl uso de animaciones puede ser muy potente, pero igualmente impone una elevada carga cognitiva para nuestro cerebro. Considera el caso anterior con el paquete gganimate y observa como tu cerebro debe recordar la posición de partida de algunos países de interés para interpretar correctamente la evolución del gráfico. Un ejemplo sería el mostrado en la Figura 2.1. No es de extrañar que, en contraste, muchos diseñadores prefieran las parrillas de gráficos (en inglés lattice o facets) para la representación de información en varios paneles de forma simultánea, como muestra la Figura 2.2.\n\n\n\n\n\n\n\nFigura 2.1: Gráfico que muestra la evolución temporal de los crímenes relacionados con vehículos cometidos en la ciudad de Milwaukee (EE.UU.), entre 2016 y 2019 mediante una animación. Fuente: enlace.\n\n\n\n\n\n\n\n\n\nFigura 2.2: Gráfico que muestra la evolución temporal de los crímenes relacionados con vehículos cometidos en la ciudad de Milwaukee (EE.UU.), entre 2016 y 2019 utilizando facets. Fuente: enlace.\n\n\n\n\nUna importante recomendación que popularizó el profesor Shneiderman (1996) es la de construir los gráficos de forma que presenten un resumen global en primer lugar y luego permitan obtener más detalles o incluso (si añadimos interactividad) se pueda hacer zoom o filtrar información para fijarnos en aspectos concretos del gráfico.\nEs importante que el gráfico responda con agilidad y que no se introduzcan latencias innecesarias en la representación de algunos elementos como, por ejemplo, cuando desplazamos el gráfico, seleccionamos un grupo de elementos, hacemos zoom, etc. En este sentido, algunas bibliotecas para desarrollo de gráficos interactivos muy potentes son también conocidas por introducir notables retardos en la renderización de la visualización. Esto estropea la experiencia de usuario y entorpece la interpretación del contenido del gráfico.\nEs fundamental, incluso actualmente (con menores costes de impresión a color y pantallas con gran profundidad de color y una resolución envidiable), que nuestros gráficos puedan ser directamente representados en B/N (más exactamente, en una paleta de tonos grises) si fuese necesario.\nLos mejores gráficos destacan, además de por su funcionalidad, por su belleza. Sin embargo, este segundo aspecto es difícil de conseguir en muchos casos y es más un arte que una ciencia. Por tanto, es importante que primero nos concentremos en crear un gráfico funcional que, por lo menos, cumpla el objetivo de diseño que nos hemos planteado.",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Principios de visualización de datos</span>"
    ]
  },
  {
    "objectID": "02-principles.html#principios-de-e.-tufte",
    "href": "02-principles.html#principios-de-e.-tufte",
    "title": "2  Principios de visualización de datos",
    "section": "2.2 Principios de E. Tufte",
    "text": "2.2 Principios de E. Tufte\nOtro de los grandes exponentes del diseño de gráficos para visualización de datos es Edward R. Tufte. En una de sus obras más conocidas (Tufte, 2001) expone algunos principios y recomendaciones útiles.\n\nMaximizar el ratio datos-tinta (data-to-ink ratio): No debemos sobrecargar el gráfico con muchos datos o elementos. Por ejemplo, un gráfico en el que tengamos una gran cantidad de puntos superpuestos hará que no veamos nada o dificultará la identificación de patrones de interés. Vemos algunos ejemplos que proporciona H. Wickham es su nueva edición del libro sobre ggplot2 (https://ggplot2-book.org/), utilizando el término overplotting para denotar este problema. La Figura 2.3 muestra cómo utilizar la transparencia (parámetro alpha) para permitir interpretar mejor el gráfico reduciendo la cantidad de “tinta” empleada.\n\n\n\n\n\n\n\nFigura 2.3: Ejemplo de uso del argumento alpha apara añadir transaprencia al color en un gráfico creado con ggplot2. Fuente: https://ggplot2-book.org/statistical-summaries.html#sec-overplotting.\n\n\n\nOtro buen ejemplo de cómo maximizar el ratio datos-tinta aparece en la Figura 2.4. En este caso, tanto la versión clásica del gráfico (a) como las dos versiones siguientes (b) y (c) emplean una cantidad de tinta comedida. La versión (d) comienza a presentar problemas, porque es difícil interpretar las “rugosidades” a ambos lados de la caja en el centro de la figura. Por último, las opciones (e) y (f) intentan presentar una excesiva cantidad de información, saturando el gráfico y dificultando en gran medida su correcta interpretación, puesto que muchos detalles son accesorios (lo que realmente importa en un boxplot son los estadísticos resumen de centralidad y dispersión de la distribución de valores representada).\n\n\n\n\n\n\nFigura 2.4: Seis diseños para gráfico de tipo boxplot. El tipo (c) corresponde a Tufte. Fuente: (Healy, 2019).\n\n\n\n\nMinimizar la porquería (chartjunk): Debemos utilizar una plantilla o tema de gráfico lo más sencillo y espartano posible, que evite el uso de adornos y aditamentos innecesarios para lo que debería ser la exclusiva interpretación de la información que recoge el gráfico.\nPriorizar los datos sobre variaciones de diseño: Cualquier elemento de diseño que se introduzca debe estar siempre supeditado a cumplir una función en la representación e interpretación de los datos, sin que la única razón para utilizarlo sea puramente estética.\nUso de facetas (small multiples) para representar evolución y facilitar las comparativas en varias dimensiones, tal y como hemos presentado en el ejemplo de la Figura 2.2.\nProporcionar siempre contexto adicional (leyenda, comentarios, anotaciones junto al gráfico o sobre el gráfico) que faciliten al máximo la interpretación de su contenido. Esta ha sido siempre una máxima distintiva de los trabajos de E. R. Tufte, llegando al extremo de inventar un formato muy personal para sus libros que se ha hecho muy popular para trabajos y publicaciones científicas (véase Cap. 6 del Taller sobre investigación reproducible con Quarto y R).",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Principios de visualización de datos</span>"
    ]
  },
  {
    "objectID": "02-principles.html#buenas-prácticas-y-recomendaciones",
    "href": "02-principles.html#buenas-prácticas-y-recomendaciones",
    "title": "2  Principios de visualización de datos",
    "section": "2.3 Buenas prácticas y recomendaciones",
    "text": "2.3 Buenas prácticas y recomendaciones\nPodemos extraer también otras prácticas y recomendaciones (Healy, 2019).\n\nPor más que estén bien diseñadas siguiendo buenos principios de visualización de datos, no debemos confiar ciegamente en las bibliotecas y herramientas de visualización, así como en las configuraciones por defecto de dichas herramientas. La Figura 2.5 muestra un ejemplo de un gráfico de barras que utiliza un diseño por defecto de ggplot2 para representar un gráfico de barras apiladas. Sin embargo, por más que el gráfico no esté saturado de información y la presentación sea simple y directa, la interpretación del mismo no es ni mucho menos evidente. Resulta muy dificultoso poder comparar la evolución entre las diferentes categorías, y más aún cuando las barras están en disposición vertical en lugar de horizontal.\n\n\n\n\n\n\n\nFigura 2.5: Gráfico de barras apiladas que muestra un ejemplo de configuración por defecto en ggplot2 que no ayuda en la interpretación de los datos representados. Fuente: (Healy, 2019).\n\n\n\n\nDebemos tener también precaución con el uso de los ratios de aspecto de nuestros gráficos. El mismo gráfico representando los mismos datos con los mismos elementos pero usando diferentes ratios de aspecto puede sugerir una interpretación muy distinta, tal y como muestra la Figura 2.6.\n\n\n\n\n\n\n\nFigura 2.6: Comparativa de utilización de dos ratios de aspecto diferentes en el mismo gráfico con los mismos datos. Fuente: (Healy, 2019).\n\n\n\n\nLas leyes de la Teoría de la Gestalt (gestalt rules) relacionan los estímulos visuales con lo que estos generan en la mente que los mira. La Figura 2.7 muestra algunas de estas reglas en acción.\n\n\n\n\n\n\n\nFigura 2.7: Aplicación de algunas reglas de la Gestalt para evidenciar relaciones entre los elementos representados. Fuente: (Healy, 2019).\n\n\n\nEn particular, podemos usar algunas de estas reglas para evidenciar agrupamientos, clasificaciones o entidades que pueden se tratadas como la misma cosa o como parte de la misma cosa.\n\nProximidad: los elementos que están espacialmente cerca unos de otros tienden a ser relacionados.\nSimilaridad: los elementos de aspecto parecido tienden a estar relacionados.\nConexión: los elementos que están visualmente ligados unos a otros parecen estar relacionados.\nContinuidad: los objetos parcialmente ocultos tienden a completarse con formas conocidas.\nCierre (closure): formas incompletas se perciben como completas.\nFigura y fondo: los elementos visuales se consideran en primer plano o en segundo plano.\nDestino común: los elementos que comparten una dirección de movimiento se perciben como una unidad.\nAtención aL correcto uso de las escalas. Muchos creadores de gráficos de visualización de datos están advertidos de la regla de evitar comparar gráficos que utilicen diferentes escalas de representación. No obstante, otra advertencia se refiere a un aspecto más sutil pero de gran impacto: un uso inadecuado de la escala de representación. La Figura 2.8 muestra dos gráficas con los mismos elementos y el mismo ratio de aspecto, pero que usan escalas verticales diferentes para representar la misma evolución temporal de los datos. A pesar de que las conclusiones deberían ser idénticas, en la gráfica de la izquierda nos da la sensación de que la caída vertical es mucho mayor y más pronunciada que en el gráfico de la derecha.\n\n\n\n\n\n\n\nFigura 2.8: Ejemplo de usuo incorrecto de la escala de representación en un gráfico de evolución temporal. Fuente: (Healy, 2019).\n\n\n\n\n\n\n\nHealy, K. (2019). Data Visualization. A Practical Introduction. Princeton University Press. https://socviz.co/\n\n\nMunzner, T. (2015). Visualization Analysis and Design. A K Peters. http://www.cs.ubc.ca/\\%7Etmm/vadbook/\n\n\nShneiderman, B. (1996). The Eyes Have It: A Task by Data Type Taxonomy for Information Visualizations. Proceedings of the 1996 IEEE Symposium on Visual Languages, Boulder, Colorado, USA, September 3-6, 1996, 336-343. https://doi.org/10.1109/VL.1996.545307\n\n\nTufte, E. R. (2001). The Visual Display of Quantitative Information. Graphics Press LLC.",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Principios de visualización de datos</span>"
    ]
  },
  {
    "objectID": "03-chart-types.html",
    "href": "03-chart-types.html",
    "title": "3  Galería de gráficos",
    "section": "",
    "text": "3.1 Taxonomía de gráficos",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Galería de gráficos</span>"
    ]
  },
  {
    "objectID": "03-chart-types.html#taxonomía-de-gráficos",
    "href": "03-chart-types.html#taxonomía-de-gráficos",
    "title": "3  Galería de gráficos",
    "section": "",
    "text": "Storytelling with Data.",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Galería de gráficos</span>"
    ]
  },
  {
    "objectID": "04-grammar.html",
    "href": "04-grammar.html",
    "title": "4  Gramática de gráficos",
    "section": "",
    "text": "4.1 Origen y propósito\nL. Wilkinson",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Gramática de gráficos</span>"
    ]
  },
  {
    "objectID": "04-grammar.html#librerías-y-paquetes",
    "href": "04-grammar.html#librerías-y-paquetes",
    "title": "4  Gramática de gráficos",
    "section": "4.2 Librerías y paquetes",
    "text": "4.2 Librerías y paquetes\nEjemplos de paquetes y librerías en R y otros lenguajes que adoptan el paradigma de la grammar of graphics.",
    "crumbs": [
      "Fundamentos",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Gramática de gráficos</span>"
    ]
  },
  {
    "objectID": "05-ggplot2.html",
    "href": "05-ggplot2.html",
    "title": "5  El paquete ggplot2",
    "section": "",
    "text": "5.1 Anatomía de un gráfico con ggplot2",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>El paquete `ggplot2`</span>"
    ]
  },
  {
    "objectID": "05-ggplot2.html#elementos-estéticos",
    "href": "05-ggplot2.html#elementos-estéticos",
    "title": "5  El paquete ggplot2",
    "section": "5.2 Elementos estéticos",
    "text": "5.2 Elementos estéticos",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>El paquete `ggplot2`</span>"
    ]
  },
  {
    "objectID": "05-ggplot2.html#geometrías",
    "href": "05-ggplot2.html#geometrías",
    "title": "5  El paquete ggplot2",
    "section": "5.3 Geometrías",
    "text": "5.3 Geometrías",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>El paquete `ggplot2`</span>"
    ]
  },
  {
    "objectID": "05-ggplot2.html#escalas",
    "href": "05-ggplot2.html#escalas",
    "title": "5  El paquete ggplot2",
    "section": "5.4 Escalas",
    "text": "5.4 Escalas",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>El paquete `ggplot2`</span>"
    ]
  },
  {
    "objectID": "05-ggplot2.html#etiquetas-y-título",
    "href": "05-ggplot2.html#etiquetas-y-título",
    "title": "5  El paquete ggplot2",
    "section": "5.5 Etiquetas y título",
    "text": "5.5 Etiquetas y título",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>El paquete `ggplot2`</span>"
    ]
  },
  {
    "objectID": "05-ggplot2.html#anotaciones",
    "href": "05-ggplot2.html#anotaciones",
    "title": "5  El paquete ggplot2",
    "section": "5.6 Anotaciones",
    "text": "5.6 Anotaciones",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>El paquete `ggplot2`</span>"
    ]
  },
  {
    "objectID": "05-ggplot2.html#temas",
    "href": "05-ggplot2.html#temas",
    "title": "5  El paquete ggplot2",
    "section": "5.7 Temas",
    "text": "5.7 Temas",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>El paquete `ggplot2`</span>"
    ]
  },
  {
    "objectID": "05-ggplot2.html#extensiones-de-ggplot2",
    "href": "05-ggplot2.html#extensiones-de-ggplot2",
    "title": "5  El paquete ggplot2",
    "section": "5.8 Extensiones de ggplot2",
    "text": "5.8 Extensiones de ggplot2",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>El paquete `ggplot2`</span>"
    ]
  },
  {
    "objectID": "05-ggplot2.html#taller-práctico-1-construcción-de-gráficos-paso-a-paso",
    "href": "05-ggplot2.html#taller-práctico-1-construcción-de-gráficos-paso-a-paso",
    "title": "5  El paquete ggplot2",
    "section": "5.9 Taller práctico 1: construcción de gráficos paso a paso",
    "text": "5.9 Taller práctico 1: construcción de gráficos paso a paso",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>El paquete `ggplot2`</span>"
    ]
  },
  {
    "objectID": "06-models.html",
    "href": "06-models.html",
    "title": "6  Gráficos para evaluación de modelos",
    "section": "",
    "text": "6.1 Evaluación de modelos",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Gráficos para evaluación de modelos</span>"
    ]
  },
  {
    "objectID": "06-models.html#ejemplo-modelos-de-regresión",
    "href": "06-models.html#ejemplo-modelos-de-regresión",
    "title": "6  Gráficos para evaluación de modelos",
    "section": "6.2 Ejemplo: modelos de regresión",
    "text": "6.2 Ejemplo: modelos de regresión\n\nGráficos clásicos de resumen de resultados.\nGráficos clásicos para evaluación de modelos.",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Gráficos para evaluación de modelos</span>"
    ]
  },
  {
    "objectID": "06-models.html#ejemplo-explicabilidad-de-modelos",
    "href": "06-models.html#ejemplo-explicabilidad-de-modelos",
    "title": "6  Gráficos para evaluación de modelos",
    "section": "6.3 Ejemplo: explicabilidad de modelos",
    "text": "6.3 Ejemplo: explicabilidad de modelos\nCasos sencillos sobre importancia de variables.",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Gráficos para evaluación de modelos</span>"
    ]
  },
  {
    "objectID": "07-time-series.html",
    "href": "07-time-series.html",
    "title": "7  Visualización de series temporales",
    "section": "",
    "text": "7.1 Datos de series temporales\nBreve introducción a la estructura y representación de datos se series temporales, centrándonos en el paquete tsibble.",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Visualización de series temporales</span>"
    ]
  },
  {
    "objectID": "07-time-series.html#taller-práctico-2-representación-de-series-temporales",
    "href": "07-time-series.html#taller-práctico-2-representación-de-series-temporales",
    "title": "7  Visualización de series temporales",
    "section": "7.2 Taller práctico 2: representación de series temporales",
    "text": "7.2 Taller práctico 2: representación de series temporales",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Visualización de series temporales</span>"
    ]
  },
  {
    "objectID": "07-time-series.html#taller-práctico-3-visualización-de-modelos-de-predicción",
    "href": "07-time-series.html#taller-práctico-3-visualización-de-modelos-de-predicción",
    "title": "7  Visualización de series temporales",
    "section": "7.3 Taller práctico 3: visualización de modelos de predicción",
    "text": "7.3 Taller práctico 3: visualización de modelos de predicción",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Visualización de series temporales</span>"
    ]
  },
  {
    "objectID": "08-spatial.html",
    "href": "08-spatial.html",
    "title": "8  Visualización de datos espaciales",
    "section": "",
    "text": "8.1 Datos espaciales",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Visualización de datos espaciales</span>"
    ]
  },
  {
    "objectID": "08-spatial.html#representación-de-datos-espaciales",
    "href": "08-spatial.html#representación-de-datos-espaciales",
    "title": "8  Visualización de datos espaciales",
    "section": "8.2 Representación de datos espaciales",
    "text": "8.2 Representación de datos espaciales",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Visualización de datos espaciales</span>"
    ]
  },
  {
    "objectID": "08-spatial.html#taller-práctico-4-el-paquete-leaflet",
    "href": "08-spatial.html#taller-práctico-4-el-paquete-leaflet",
    "title": "8  Visualización de datos espaciales",
    "section": "8.3 Taller práctico 4: el paquete leaflet",
    "text": "8.3 Taller práctico 4: el paquete leaflet",
    "crumbs": [
      "Implementación",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Visualización de datos espaciales</span>"
    ]
  },
  {
    "objectID": "09-add-resources.html",
    "href": "09-add-resources.html",
    "title": "9  Recursos adicionales",
    "section": "",
    "text": "Listado de recursos adicionales de interés.\nSee Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, D. E. (1984). Literate Programming. Comput. J., 27(2), 97-111. https://doi.org/10.1093/comjnl/27.2.97",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Recursos adicionales</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Referencias",
    "section": "",
    "text": "Anscombe, F. J. (1973). Graphs in statistical analysis. American\nStatistician, 27(1), 17–21.\n\n\nHealy, K. (2019). Data visualization. A practical introduction.\nPrinceton University Press. https://socviz.co/\n\n\nKnuth, D. E. (1984). Literate programming. Comput. J.,\n27(2), 97–111. https://doi.org/10.1093/comjnl/27.2.97\n\n\nMunzner, T. (2015). Visualization analysis and design. A\nK Peters. http://www.cs.ubc.ca/\\%7Etmm/vadbook/\n\n\nShneiderman, B. (1996). The eyes have it: A task by data\ntype taxonomy for information visualizations. Proceedings of the\n1996 IEEE Symposium on Visual Languages, Boulder, Colorado,\nUSA, September 3-6, 1996, 336–343. https://doi.org/10.1109/VL.1996.545307\n\n\nTufte, E. R. (2001). The visual display of quantitative\ninformation. Graphics Press LLC.\n\n\nWickham, H. (2014). Tidy Data. Journal of Statistical\nSoftware, Articles, 59(10), 1–23. https://doi.org/10.18637/jss.v059.i10",
    "crumbs": [
      "Referencias"
    ]
  },
  {
    "objectID": "A-command-ref.html",
    "href": "A-command-ref.html",
    "title": "Apéndice A — Referencia de comandos",
    "section": "",
    "text": "A.1 Paquete ggplot2",
    "crumbs": [
      "Apéndices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Referencia de comandos</span>"
    ]
  },
  {
    "objectID": "A-command-ref.html#series-temporales",
    "href": "A-command-ref.html#series-temporales",
    "title": "Apéndice A — Referencia de comandos",
    "section": "A.2 Series temporales",
    "text": "A.2 Series temporales",
    "crumbs": [
      "Apéndices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Referencia de comandos</span>"
    ]
  },
  {
    "objectID": "A-command-ref.html#datos-espaciales",
    "href": "A-command-ref.html#datos-espaciales",
    "title": "Apéndice A — Referencia de comandos",
    "section": "A.3 Datos espaciales",
    "text": "A.3 Datos espaciales",
    "crumbs": [
      "Apéndices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Referencia de comandos</span>"
    ]
  },
  {
    "objectID": "B-packages.html",
    "href": "B-packages.html",
    "title": "Apéndice B — Paquetes R y atribuciones",
    "section": "",
    "text": "B.1 Requisitos previos\nPara ejecutar los ejemplos incluidos en este taller, se necesita tener instalado R y una IDE de desarrollo para este lenguaje, como por ejemplo RStudio o Microsoft VS Code.",
    "crumbs": [
      "Apéndices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Paquetes R y atribuciones</span>"
    ]
  },
  {
    "objectID": "B-packages.html#atribución-de-imágenes-e-iconos",
    "href": "B-packages.html#atribución-de-imágenes-e-iconos",
    "title": "Apéndice B — Paquetes R y atribuciones",
    "section": "B.2 Atribución de imágenes e iconos",
    "text": "B.2 Atribución de imágenes e iconos",
    "crumbs": [
      "Apéndices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Paquetes R y atribuciones</span>"
    ]
  }
]